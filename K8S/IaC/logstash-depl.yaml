apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
data:
  logstash.conf: |
    input {
      tcp {
        port => 5000
        codec => json
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-service:9200"]
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }
  logstash.yml: |
    http.host: "0.0.0.0"
    xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch-service:9200"]
  pipelines.yml: |
    - pipeline.id: main
      path.config: "/usr/share/logstash/pipeline/logstash.conf"
  log4j2.properties: |
    status = error
    name = LogstashPropertiesConfig

    appender.console.type = Console
    appender.console.name = plain_console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = plain_console

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.11.0
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/logstash/config
        - name: pipeline-volume
          mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: config-volume
        configMap:
          name: logstash-config
      - name: pipeline-volume
        configMap:
          name: logstash-config

---
apiVersion: v1
kind: Service
metadata:
  name: logstash-service
spec:
  selector:
    app: logstash
  ports:
    - name: logstash-tcp-port
      protocol: TCP
      port: 5000
      targetPort: 5000

